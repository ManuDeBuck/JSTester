function deepCompare(){function i(o,p){if(isNaN(o)&&isNaN(p)&&"number"==typeof o&&"number"==typeof p||o===p)return!0;if("function"==typeof o&&"function"==typeof p||o instanceof Date&&p instanceof Date||o instanceof RegExp&&p instanceof RegExp||o instanceof String&&p instanceof String||o instanceof Number&&p instanceof Number)return o.toString()===p.toString();if(!(o instanceof Object&&p instanceof Object)||o.isPrototypeOf(p)||p.isPrototypeOf(o)||o.constructor!==p.constructor||o.prototype!==p.prototype||-1<m.indexOf(o)||-1<n.indexOf(p))return!1;for(var q in p)if(p.hasOwnProperty(q)!==o.hasOwnProperty(q)||typeof p[q]!=typeof o[q])return!1;for(q in o){if(p.hasOwnProperty(q)!==o.hasOwnProperty(q)||typeof p[q]!=typeof o[q])return!1;switch(typeof o[q]){case"object":case"function":if(m.push(o),n.push(p),!i(o[q],p[q]))return!1;m.pop(),n.pop();break;default:if(o[q]!==p[q])return!1;}}return!0}var j;if(1>arguments.length)return!0;var l=1;for(j=arguments.length;l<j;l++){var m=[],n=[];if(!i(arguments[0],arguments[l]))return!1}return!0}var lineReader=require("readline").createInterface({input:require("fs").createReadStream(__filename)}),lines=[],testing=!1;function test(c,d,h){var g=!1,f=0;console.oldLog=console.log,console.log=function(i){return console.oldLog(i),i};try{var b=eval(c.join("\n"));try{var a=eval("("+d.join("\n")+")")}catch(i){a=d.join("\n")}}catch(e){for(b=e.name+": "+e.message,a=d.join("\n"),g=!0,d=h+1;d<c.length;d+=1)try{eval(c.slice(0,d)),f+=1}catch(i){break}}return console.log=console.oldLog,console.oldLog=void 0,c=deepCompare(b,a),[g,c,a,b,f]}lineReader.on("line",function(i){/`"""/.test(i)&&0===lines.length?testing=!0:(/"""`/.test(i)&&(testing=!1),testing&&(0===lines.length||/^>>>? .*$/.test(i)||/^>>>? .*$/.test(lines[lines.length-1])?lines.push(i):lines[lines.length-1]+="\n"+i))}).on("close",function(){for(var p,i=[],j=[],l=0,m=0,n=0,o=0;o<lines.length;o+=1)p=lines[o],/^>>>? .*$/.test(p)?i.push(p.substring(p.indexOf(" "))):(0!==p.length&&j.push(p),0!==j.length&&(j=test(i,j,n),j[1]?m+=1:(console.log("Trying:\n"+i.slice(n,i.length).map(function(q){return"\t"+q}).join("\n")+"\nExpecting:\n    "+JSON.stringify(j[2]).replace(/\\n/g,"\n\t")+"\nActual:\n    "+JSON.stringify(j[3]).replace(/\\n/g,"\n\t")),console.log(Array(100).join("-")),l+=1),j[0]?i=i.slice(0,n+j[4]):n=i.length,j=[]));0!==j.length&&test(i,j),console.log(m+l+" items:\n        "+m+" items correct\n        "+l+" items failed")});
